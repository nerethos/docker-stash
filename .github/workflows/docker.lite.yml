name: Publish lite image

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - Dockerfile.lite

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    env:
      UPSTREAM_VERSION: ${{ github.event.inputs.UPSTREAM_VERSION }}
      PlATFORM_PAIR: ${{ github.event.inputs.PLATFORM_PAIR }}
    outputs:
      UPSTREAM_VERSION: ${{ steps.get_version.outputs.UPSTREAM_VERSION }}
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-24.04
            qemu: false
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
            qemu: false
          - platform: linux/arm/v7
            runner: ubuntu-24.04-arm
            qemu: true
          - platform: linux/arm/v6
            runner: ubuntu-24.04-arm
            qemu: true

    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Stash Version
        id: get_version
        run: |
          VER=$(cat UPSTREAM_VERSION)
          echo "UPSTREAM_VERSION=$VER" >> $GITHUB_OUTPUT
          echo "UPSTREAM_VERSION=$VER" >> $GITHUB_ENV

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ github.repository_owner }}/stash-jellyfin-ffmpeg
            ${{ github.repository_owner }}/stash
            ghcr.io/${{ github.repository }}
          flavor: latest=false
          tags: |
            type=raw,priority=996,lite-${{ env.UPSTREAM_VERSION }}
            type=sha,priority=997,prefix=lite-${{ env.UPSTREAM_VERSION }}-
            type=sha,priority=998,prefix=lite-,suffix=,format=short
            type=raw,priority=999,lite
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            ${{ github.repository_owner }}/stash-jellyfin-ffmpeg
            ${{ github.repository_owner }}/stash
            ghcr.io/${{ github.repository_owner }}/stash
          provenance: mode=max
          sbom: true
          cache-from: |
            type=gha,scope=${{ matrix.platform }}
            type=registry,ref=${{ github.repository_owner }}/stash:buildcache-${{ matrix.platform }}
          cache-to: type=gha,scope=${{ matrix.platform }},mode=max
          file: Dockerfile.lite
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1 

  merge:
    env:
      UPSTREAM_VERSION: ${{ needs.build.outputs.UPSTREAM_VERSION }}
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v5
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ github.repository_owner }}/stash-jellyfin-ffmpeg
            ${{ github.repository_owner }}/stash
            ghcr.io/${{ github.repository_owner }}/stash
          flavor: latest=false
          tags: |
            type=raw,priority=996,lite-${{ env.UPSTREAM_VERSION }}
            type=sha,priority=997,prefix=lite-${{ env.UPSTREAM_VERSION }}-
            type=sha,priority=998,prefix=lite-,suffix=,format=short
            type=raw,priority=999,lite

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          # Get list of digest files
          DIGEST_FILES=$(ls -1)
          
          # Create tags array from metadata
          TAGS=$(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON")
          
          # Create image references with proper formatting
          REFERENCES=""
          for digest in $DIGEST_FILES; do
            REFERENCES="${REFERENCES} ${{ github.repository_owner }}/stash-jellyfin-ffmpeg@sha256:${digest}"
            REFERENCES="${REFERENCES} ${{ github.repository_owner }}/stash@sha256:${digest}"
            REFERENCES="${REFERENCES} ghcr.io/${{ github.repository_owner }}/stash@sha256:${digest}"
          done
          
          # Execute the command with properly formatted references
          docker buildx imagetools create ${TAGS} ${REFERENCES}

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ github.repository_owner }}/stash:${{ steps.meta.outputs.version }}