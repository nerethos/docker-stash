# syntax=docker/dockerfile:1

FROM --platform=$BUILDPLATFORM alpine:3.21

LABEL \
  org.opencontainers.image.title="Stash" \
  org.opencontainers.image.description="An organizer for your porn, written in Go." \
  org.opencontainers.image.url="https://github.com/nerethos/docker-stash" \
  org.opencontainers.image.documentation="https://docs.stashapp.cc" \
  org.opencontainers.image.source="https://github.com/nerethos/docker-stash" \
  org.opencontainers.image.authors="nerethos"

ENV \
  HOME="/config" \
  TZ="Etc/UTC" \
  # stash environment variables
  STASH_CONFIG="/config" \
  STASH_CONFIG_FILE="/config/config.yml" \
  STASH_GENERATED="/config/generated/" \
  STASH_METADATA="/config/metadata/" \
  STASH_CACHE="/config/cache/" \
  STASH_PLUGINS="/config/plugins/" \
  STASH_SCRAPERS="/config/scrapers" \
  PY_VENV="/venv" \
  PATH="/venv/bin:/config/.local:$PATH" 

ARG TARGETPLATFORM
ARG TARGETARCH
ARG TARGETVARIANT

RUN \
  apk add --no-cache \
    bash \
    ca-certificates \
    curl \
    ffmpeg \
    python3 \
    py3-requests \
    py3-requests-toolbelt \
    py3-lxml \
    py3-pip \
    ruby \
    shadow \
    tzdata \
    vips \
    vips-tools

RUN \
  set -ex && \
  echo "TARGETPLATFORM=$TARGETPLATFORM" && \
  echo "TARGETARCH=$TARGETARCH" && \
  echo "TARGETVARIANT=$TARGETVARIANT" && \
  case "${TARGETARCH}${TARGETVARIANT}" in \
      "amd64") STASH_ARCH="stash-linux" ;; \
      "armv7") STASH_ARCH="stash-linux-arm32v7" ;; \
      "armv6") STASH_ARCH="stash-linux-arm32v6" ;; \
      "arm64") STASH_ARCH="stash-linux-arm64v8" ;; \
      *) echo "Unsupported architecture: ${TARGETARCH}${TARGETVARIANT}"; exit 1 ;; \
  esac && \
  if [ -z ${STASH_RELEASE+x} ]; then \
    STASH_RELEASE=$(curl -sX GET "https://api.github.com/repos/stashapp/stash/releases/latest" \
    | awk '/tag_name/{print $4;exit}' FS='[""]'); \
  fi && \
  curl -o \
    /usr/bin/stash -L \
    "https://github.com/stashapp/stash/releases/download/${STASH_RELEASE}/${STASH_ARCH}" && \
  chmod +x /usr/bin/stash

RUN \
  mkdir -p ${PY_VENV} && \
  mkdir ${STASH_CONFIG} && \
  mkdir ${STASH_CACHE} && \
  mkdir ${STASH_GENERATED} && \
  mkdir ${STASH_METADATA} && \
  mkdir ${STASH_PLUGINS} && \
  mkdir ${STASH_SCRAPERS} && \
  useradd -u 1000 -U -d ${STASH_CONFIG} -s /bin/false stash && \
  usermod -G users stash && \
  usermod -G video stash && \
  chown -R stash ${STASH_CONFIG} && \
  chown -R stash ${PY_VENV}

RUN \
  apk del curl

COPY --chmod=755 entrypoint.sh /usr/local/bin

USER stash
WORKDIR ${STASH_CONFIG}
EXPOSE 9999
ENTRYPOINT ["entrypoint.sh"]